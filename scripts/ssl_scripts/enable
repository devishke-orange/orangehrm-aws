#!/bin/bash

exec 3>&1 1>>"$LOG_DIR/orangehrm_ssl_enable.log" 2>&1
set -x
set -e

if [[ -z  $OHRM_DIR ]]; then
    ohrm_print "\nPlease run this script from the OrangeHRM command\n"
    ohrm_print "i.e. orangehrm ssl enable\n\n"
    exit 1
fi

ohrm_print "\n"

ohrm_print "In order to generate SSL certificates, the OrangeHRM command line utility employs Certbot by the Electronic Frontier Foundation\n"
ohrm_print "Certbot is a free, open source software tool for automatically using Let's Encrypt certificates on manually-administrated websites to enable HTTPS.\n"
ohrm_print "To learn more about certbot, please visit https://certbot.eff.org/\n\n"

read -rp "Press ENTER to to continue" 2>&3

ohrm_print "\n"

print_progress_message "Checking for existing certificates" wip

if ! docker run -it --rm --name certbot --mount source=orangehrm_orangehrm-cert,target=/etc/letsencrypt certbot/certbot certificates | grep "No certificates found"; then
    ohrm_print "You already have some generated certificates available for use.\n"
    docker run -it --rm --name certbot --mount source=orangehrm_orangehrm-cert,target=/etc/letsencrypt certbot/certbot certificates >&3
    exit 0
fi

print_progress_message "Checking for existing certificates" success

print_progress_message "Preparing OrangeHRM System" wip

docker exec orangehrm sed -i "3 d" /var/www/html/.htaccess
docker exec orangehrm sed -i '2 a RedirectMatch 404 /(?!\\.well\\-known)\\..*$' /var/www/html/.htaccess

print_progress_message "Preparing OrangeHRM System" success rewrite

ohrm_print "\n"

ohrm_print "Your OrangeHRM instance is now prepared for SSL certificate generation\n"
ohrm_print "The OrangeHRM command line utility will now run Certbot\n\n"

if docker run -it --rm --name certbot --mount source=orangehrm_orangehrm-webroot,target=/var/www/html --mount source=orangehrm_orangehrm-cert,target=/etc/letsencrypt --mount type=bind,source="$LOG_DIR",target=/var/log/letsencrypt certbot/certbot certonly --webroot --webroot-path /var/www/html >&3; then
    print_progress_message "Certificates generated" success
    print_progress_message "Preparing server" wip

    # Add read permission within container for SSL certificates
    docker exec orangehrm chmod 400 /etc/letsencrypt

    domain="$(docker exec orangehrm ls /etc/letsencrypt/archive)"

    if ! docker exec orangehrm find "/etc/apache2/sites-available/$domain.conf"; then
        docker cp "$SSL_CONF_FILE" "orangehrm:/etc/apache2/sites-available/$domain.conf"
        docker exec orangehrm sed -i "s/YOUR_SERVER_NAME/$domain/g" "/etc/apache2/sites-available/$domain.conf"
        docker exec orangehrm ln -s "../sites-available/$domain.conf" "/etc/apache2/sites-enabled/$domain.conf"
    fi

    docker exec orangehrm rm -f /etc/apache2/sites-enabled/000-default.conf
    docker exec orangehrm a2enmod ssl
    
    # docker exec orangehrm service apache2 restart exits with error on success causing the script to fail because of set -e
    # by putting it in an if condition this is avoided
    if docker exec orangehrm service apache2 restart; then
        ohrm_print "The apache service did not restart properly!\n"
        ohrm_print "Please run 'docker exec orangehrm service apache2 restart'\n"
    fi

    # Cache folder permissions
    docker exec orangehrm chmod -R 775 /var/www/html/src/cache

    print_progress_message "Preparing server" success rewrite

    printf "You can now access OrangeHRM at %bhttps://%s%b\n\n" "$GC" "$domain" "$EC" >&3
else
    ohrm_print "Something went wrong! Please try again\n\n"
fi

ohrm_print "\n"

ohrm_print "Add section about renewing certificates"