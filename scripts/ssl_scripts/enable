#!/bin/bash

exec 3>&1 1>>"$LOG_DIR/orangehrm_ssl_enable.log" 2>&1
set -x
set -e

if [[ -z  $OHRM_DIR ]]; then
    ohrm_print "\nPlease run this script from the OrangeHRM command\n"
    ohrm_print "i.e. orangehrm ssl enable\n\n"
    exit 1;
fi

ohrm_print "This script will run certbot from EFF\n"
ohrm_print "Elaborate on process here!\n\n"

read -rp "Press ENTER to to continue" 2>&3

ohrm_print "\n"

print_progress_message "Preparing OrangeHRM System" wip

# Adding mounts to docker compose file
docker cp orangehrm:/var/www/html "$WEBROOT_DIR"
cp "$COMPOSE_FILE" "$COMPOSE_FILE.backup"
chmod 600 "$COMPOSE_FILE"
sed -i "7 a \ \ \ \ volumes:" "$COMPOSE_FILE"
sed -i "8 a \ \ \ \ \ \ - \"$WEBROOT_DIR:/var/www/html\"" "$COMPOSE_FILE"
sed -i "9 a \ \ \ \ \ \ - \"$SSL_DIR:/etc/letsencrypt\"" "$COMPOSE_FILE"
docker compose -f "$COMPOSE_FILE" up -d

docker cp orangehrm:/var/www/html/.htaccess "$OHRM_HOME_DIR/.htaccess.backup"
docker exec orangehrm sed -i "3 d" /var/www/html/.htaccess
docker exec orangehrm sed -i '2 a RedirectMatch 404 /(?!\\.well\\-known)\\..*$' /var/www/html/.htaccess

print_progress_message "Preparing OrangeHRM System" success rewrite

ohrm_print "Certbot will now run\n"

# Remove --dry-run
if docker run -it --rm --name certbot -v "$WEBROOT_DIR:/var/www/html" -v "$SSL_DIR:/etc/letsencrypt" -v "$LOG_DIR:/var/log/letsencrypt" certbot/certbot certonly --dry-run --webroot --webroot-path /var/www/html >&3; then
    ohrm_print "SUCCCESS!\n"
else
    ohrm_print "FAILURE!\n"
fi

cp "$COMPOSE_FILE.backup" "$COMPOSE_FILE"
rm -f "$COMPOSE_FILE.backup"

docker compose -f "$COMPOSE_FILE" up -d

rm -rf "$WEBROOT_DIR"
rm -rf "$SSL_DIR"